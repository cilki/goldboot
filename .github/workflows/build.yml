name: build
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-linux:
    name: Build / ubuntu-latest (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev libgtk-4-dev jq

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build x86_64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-x86_64-unknown-linux-gnu
          path: target/release/goldboot

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-registry-x86_64-unknown-linux-gnu
          path: target/release/goldboot-registry

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-linux-x86_64-unknown-linux-gnu
          path: target/release/goldboot-linux

      # - name: Build goldboot-linux image x86_64
      #   run: |
      #     export RUST_BACKTRACE=1
      #     export RUST_LOG=debug
      #     target/release/goldboot init --template GoldbootLinux
      #     jq '.templates[0].executable = "target/release/goldboot-linux"' goldboot.json >goldboot.json.tmp
      #     mv goldboot.json.tmp goldboot.json
      #     target/release/goldboot build --output goldboot-linux-x86_64.gb

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-linux-x86_64.gb
          path: goldboot-linux-x86_64.gb

  build-macos:
    name: Build / macos-latest (x86_64)
    runs-on: macos-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build x86_64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-x86_64-apple-darwin
          path: target/release/goldboot

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-registry-x86_64-apple-darwin
          path: target/release/goldboot-registry

  build-windows:
    name: Build / windows-latest (x86_64)
    runs-on: windows-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build x86_64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-x86_64-pc-windows-msvc
          path: target/release/goldboot

      - uses: actions/upload-artifact@v3
        with:
          name: goldboot-registry-x86_64-pc-windows-msvc
          path: target/release/goldboot-registry

  build-docker:
    if: github.event_name != 'pull_request'
    name: Build docker / ubuntu-latest
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Copy goldboot-x86_64-unknown-linux-gnu
        uses: actions/download-artifact@v3
        with:
          name: goldboot-x86_64-unknown-linux-gnu
          path: goldboot/bin/linux-x86_64

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: goldboot
          platforms: linux/amd64,linux/arm64
          push: true
          tags: fossable/goldboot:latest

  test-x86_64:
    if: github.event_name != 'pull_request'
    name: Test / ubuntu-latest (x86_64) / ${{ matrix.mold }} (x86_64)
    runs-on: ubuntu-latest
    needs: build-linux
    strategy:
      fail-fast: false
      matrix:
        mold: [ArchLinux, Debian]
    steps:
      - name: Increase free space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Install goldboot
        uses: actions/download-artifact@v3
        with:
          name: goldboot-x86_64-unknown-linux-gnu
          path: /home/runner/.local/bin

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86
          sudo mkdir -p /var/lib/goldboot/images
          sudo chmod -R 777 /var/lib/goldboot
          sudo chmod +x /home/runner/.local/bin/goldboot

      - name: Run goldboot
        run: |
          export RUST_LOG=debug
          goldboot init --output json --mold ${{ matrix.mold }} --size 16G
          goldboot cast --record
          fallocate -l 16GiB disk.raw
          goldboot write --confirm --image ${{ matrix.mold }} --output disk.raw

      - name: Store debug output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Debug output
          path: './screenshots'
