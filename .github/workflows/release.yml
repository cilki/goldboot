name: release
on:
  push:
    branches:
      - master

jobs:
  # release:
  #   name: Publish release
  #   runs-on: ubuntu-latest
  #   if: "contains(github.event.head_commit.message, 'chore: release')"
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: dtolnay/rust-toolchain@stable
  #     - uses: MarcoIeni/release-plz-action@v0.5
  #       with:
  #         command: release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build-linux:
    name: Build / ubuntu-latest (x86_64) / ${{ matrix.target }}
    runs-on: ubuntu-24.04
    # needs: release
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev libgtk-4-dev libglib2.0-dev

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - uses: actions/checkout@v4

      - uses: actions-rs/cargo@v1
        with:
          use_cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: goldboot-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/goldboot

      - uses: actions/upload-artifact@v4
        with:
          name: goldboot-registry-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/goldboot-registry

      - name: Upload artifacts to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          for tag in $(git tag --points-at HEAD); do
            # TODO
            tag=goldboot-v0.0.5
            if cp target/${{ matrix.target }}/release/${tag%-*} ${tag%-*}_${{ matrix.target }}; then
              gh release upload "${tag}" "${tag%-*}_${{ matrix.target }}"
            fi
          done

      - name: Build goldboot-linux image x86_64
        run: |
          export RUST_BACKTRACE=1
          export RUST_LOG=debug
          target/release/goldboot init --mold Goldboot
          target/release/goldboot cast --output goldboot-linux-x86_64.gb .

      - uses: actions/upload-artifact@v4
        with:
          name: goldboot-linux-x86_64.gb
          path: goldboot-linux-x86_64.gb

  build-macos:
    name: Build / macos-latest (x86_64)
    runs-on: macos-latest
    # needs: release
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions/checkout@v4

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - uses: actions/upload-artifact@v4
        with:
          name: goldboot-x86_64-apple-darwin
          path: target/release/goldboot

  build-windows:
    name: Build / windows-latest (x86_64)
    runs-on: windows-latest
    # needs: release
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions/checkout@v4

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - uses: actions/upload-artifact@v4
        with:
          name: goldboot-x86_64-pc-windows-msvc
          path: target/release/goldboot

  build-docker:
    name: Build docker / ubuntu-latest
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: actions/download-artifact@v4
        with:
          name: goldboot-x86_64-unknown-linux-musl
          path: goldboot/linux-amd64

      - uses: actions/download-artifact@v4
        with:
          name: goldboot-aarch64-unknown-linux-musl
          path: goldboot/linux-arm64

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: goldboot
          platforms: linux/amd64,linux/arm64 #,linux/arm/v7
          push: true
          tags: fossable/goldboot:latest

      # - uses: docker/build-push-action@v5
      #   with:
      #     context: goldboot-registry
      #     platforms: linux/amd64,linux/arm64 #,linux/arm/v7
      #     push: true
      #     tags: fossable/goldboot-registry:latest

      - uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: fossable/goldboot

